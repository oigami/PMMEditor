<Window
  x:Class="PMMEditor.Views.MainWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
  xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
  xmlns:v="clr-namespace:PMMEditor.Views"
  xmlns:vm="clr-namespace:PMMEditor.ViewModels"
  Title="MainWindow"
  Width="640"
  Height="480">

  <Window.DataContext>
    <vm:MainWindowViewModel />
  </Window.DataContext>
  <Window.Resources>
    <v:ByteArrayToStringConverter x:Key="ByteArrayToStringConverter" />
  </Window.Resources>
  <i:Interaction.Triggers>

    <!--  Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう  -->
    <!--  Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります  -->
    <!--  Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています  -->

    <!--  WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます  -->
    <i:EventTrigger EventName="ContentRendered">
      <l:LivetCallMethodAction
        MethodName="Initialize"
        MethodTarget="{Binding}" />
    </i:EventTrigger>

    <!--  Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます  -->
    <i:EventTrigger EventName="Closed">
      <l:DataContextDisposeAction />
    </i:EventTrigger>

    <!--  WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください  -->

  </i:Interaction.Triggers>

  <Grid>
    <TabControl Margin="0,10,0,0">
      <TabItem Header="Header">
        <Grid Background="#FFE5E5E5">
          <TextBlock
            Width="81"
            Height="22"
            Margin="10,11,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Text="View Width"
            TextWrapping="Wrap" />
          <TextBox
            Width="120"
            Height="23"
            Margin="96,10,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Text="{Binding PmmStruct.ViewWidth}"
            TextWrapping="Wrap" />
          <TextBlock
            Width="81"
            Height="22"
            Margin="10,39,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Text="View Height"
            TextWrapping="Wrap" />
          <TextBox
            Width="120"
            Height="23"
            Margin="96,38,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Text="{Binding PmmStruct.ViewHeight}"
            TextWrapping="Wrap" />
        </Grid>
      </TabItem>
      <TabItem Header="Model">
        <Grid Background="#FFE5E5E5">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="540*" />
          </Grid.ColumnDefinitions>

          <Grid Grid.Column="0">
            <ListBox
              HorizontalAlignment="Stretch"
              DisplayMemberPath="Name"
              ItemsSource="{Binding ModelList}"
              SelectedItem="{Binding SelectedModel, Mode=TwoWay}"
              VirtualizingPanel.ScrollUnit="Pixel" />
          </Grid>

          <GridSplitter
            Grid.Column="1"
            Width="5"
            HorizontalAlignment="Center" />

          <Grid Grid.Column="2">
            <TextBox
              Height="23"
              VerticalAlignment="Top"
              Text="{Binding SelectedModel.Path}"
              TextWrapping="Wrap" />

            <TabControl Margin="0,28,0,0">
              <TabItem Header="Header">
                <Grid />
              </TabItem>

              <TabItem Header="Bone">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="140" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="500*" />
                  </Grid.ColumnDefinitions>
                  <Grid Grid.Column="0">
                    <StackPanel
                      Height="20"
                      VerticalAlignment="Top"
                      Orientation="Horizontal">
                      <TextBlock
                        VerticalAlignment="Center"
                        Text="Bone Count: " />
                      <TextBlock
                        Width="38"
                        VerticalAlignment="Center"
                        Text="{Binding SelectedModel.BoneCount}"
                        TextWrapping="NoWrap" />
                    </StackPanel>

                    <ListBox
                      Margin="0,25,0,0"
                      DisplayMemberPath=""
                      ItemsSource="{Binding SelectedModel.BoneName}"
                      VirtualizingPanel.ScrollUnit="Pixel" />
                  </Grid>

                  <GridSplitter
                    Grid.Column="1"
                    Width="5"
                    HorizontalAlignment="Center" />

                  <Grid Grid.Column="2">
                    <ListView
                      ItemsSource="{Binding SelectedModel.BoneKeyFrames}"
                      ScrollViewer.CanContentScroll="True"
                      ScrollViewer.HorizontalScrollBarVisibility="Visible"
                      ScrollViewer.PanningMode="Both"
                      ScrollViewer.VerticalScrollBarVisibility="Visible"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.ScrollUnit="Pixel"
                      VirtualizingPanel.VirtualizationMode="Recycling">
                      <ListView.View>
                        <GridView AllowsColumnReorder="False">
                          <GridViewColumn
                            DisplayMemberBinding="{Binding DataIndex, Mode=OneTime}"
                            Header="DataIndex" />
                          <GridViewColumn
                            DisplayMemberBinding="{Binding FrameNumber, Mode=OneTime}"
                            Header="FrameNumber" />
                          <GridViewColumn
                            DisplayMemberBinding="{Binding PreIndex, Mode=OneTime}"
                            Header="PreIndex" />
                          <GridViewColumn
                            DisplayMemberBinding="{Binding NextIndex, Mode=OneTime}"
                            Header="NextIndex" />
                          <GridViewColumn
                            DisplayMemberBinding="{Binding InterpolationX, Mode=OneTime, Converter={StaticResource ByteArrayToStringConverter}}"
                            Header="InterpolationX" />
                          <GridViewColumn
                            DisplayMemberBinding="{Binding InterpolationY, Mode=OneTime, Converter={StaticResource ByteArrayToStringConverter}}"
                            Header="InterpolationY" />
                          <GridViewColumn
                            DisplayMemberBinding="{Binding InterpolationZ, Mode=OneTime, Converter={StaticResource ByteArrayToStringConverter}}"
                            Header="InterpolationZ" />
                          <GridViewColumn
                            DisplayMemberBinding="{Binding InterpolationRotation, Mode=OneTime, Converter={StaticResource ByteArrayToStringConverter}}"
                            Header="InterpolationRotation" />
                          <GridViewColumn
                            DisplayMemberBinding="{Binding IsPhysicsDisabled, Mode=OneTime}"
                            Header="IsPhysicsDisabled" />
                          <GridViewColumn
                            DisplayMemberBinding="{Binding IsSelected, Mode=OneTime}"
                            Header="IsSelected" />
                        </GridView>
                      </ListView.View>
                    </ListView>
                  </Grid>
                </Grid>

              </TabItem>
              <TabItem Header="Morph" />
              <TabItem Header="Visible,IK,ExternalParent" />
            </TabControl>
          </Grid>
        </Grid>
      </TabItem>
    </TabControl>

  </Grid>
</Window>

